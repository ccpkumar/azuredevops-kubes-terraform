# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: FirstJob
    steps:
    - bash: echo Build First Job
    - bash: echo $(PipelineLevelVariable)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.SourceBranchName)
    - bash: echo $(Build.SourceDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: echo java --version
    - bash: echo node --version
    - bash: echo python --version
    - bash: echo mvn --version
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yaml
          **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
#   - job: SecondJob
#     steps:
#     - bash: echo Build Second Job
# - stage: DevDeploy
#   variables:
#     environment: Dev
#   dependsOn: Build
#   jobs:
#   - job: DevDeployJob
#     steps:
#     - bash: echo $(environment) DeployJob

# - stage: QADeploy
#   variables:
#     environment: QA
#   dependsOn: DevDeploy
#   jobs:
#   - job: QADeployJob
#     steps:
#     - bash: echo $(environment) DeployJob

# - stage: Proddeploy
#   variables:
#     environment: PROD
#   dependsOn: 
#   - DevDeploy
#   - QADeploy
#   jobs:
#   - job: ProddeployJob
#     steps:
#     - bash: echo $(environment)DeployJob

